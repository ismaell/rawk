#!/bin/sh
# .:[ rawk - rage against web frameworks ]:.
# 
# generates a static content from a tree of markdown files and other content
# originally written by 4096r/b7b720d6  "kyle isom <coder@kyleisom.net>"
# based on the suckless webframework (sw) by nibblesec
# 
# released as public domain software - for curiosity's sake, i'd be interested 
# in hearing if you take this and tinker with it, though you are far from 
# obligated to do so.
# 
# in the event your locale's public domain laws are more restrictive than the 
# ISC license, this code is licensed under the ISC license. 

conf_file="rawkrc"
site_root="/"

usage() {
    echo "usage: $0 <source dir>"
    #exit 0
}

# $1->filename $2->template
rawk_template() {
    # Following script reads substitutions from stdin
    awk '
	function get_ex(t) { RS="[ \t]+"; getline t < "-"; RS="\n"; return t }
	BEGIN { while (getline su["\\$\\{" get_ex() "\\}"] < "-" == 1); }
	BEGIN { su["\\$\\{date\\}"] = strftime() } # Date
	BEGIN { sub(/\.[^.]*$/, "", su["\\$\\{page_title\\}"]) } # Fix title
	{ for (v in su) gsub(v, su[v]); print } # Apply substitutions and print
    ' "$2" <<-!
	title		$site_title
	subtitle	$site_subtitle
	site_root	$site_root
	root_link	${site_root}index.html
	page_title	${1##*/}
	!
}

rawk_submenu() {
    dir="${1%/*}"
    find "$dir" -mindepth 1 -maxdepth 1 -printf %f\\n | sort |
    awk -v bl="${bl## }" -v dir="$dir" '
	BEGIN {
		gsub(/[\n\t ]+/, "|", bl)
		print "<div id=\"side-bar\">"
		print "\t<a href=\"index.html\">.</a>" # cwd
		if (dir != ".")
			print "\t<a href=\"../index.html\">..</a>" # parent
	}
	/\.md$/ && $0 !~ bl {
		sub(/[.][^.]+$/, "")
		printf("\t<a href=\"%s.html\">%s</a>\n", $0, $0)
	}
	END {
		print "</div>"
	}
    '
}


rawk_page() {
    rawk_template "$1" "$hdr_tpl"
    rawk_submenu "$1"
    
    echo '<div id="main">'
    if [ -n "$uname_comment" ]; then
	cat <<-!

		<!-- page build stats: -->
		<!-- os: $(uname -rms) -->
		<!-- generated on $(date) -->

	!
    fi
    $mdparser "$1"
    echo '</div>'

    rawk_template "$1" "$ftr_tpl"
}

rawk_main () {
    # check to see which arguments we got
    case $# in
    0)
        usage
        exit 1
        ;;
    1)
        set -- "$1" "${1##*/}.build"
        ;;
    esac
    src_dir=$(readlink -f "$1")
    target=$(readlink -f "$2")

    mkdir -p "$target"

    if [ -n "$stylesheet" ]; then
        mkdir -p "$target"/styles
        cp -u "$stylesheet" "$target"/styles/style.css
    fi

    cd "$src_dir"

    # convert/copy files
    find -mindepth 1 -name \*~ -o -print0 |
    while read -d '' i; do
        i="${i#./}"
        o="$target/$i"
        case "$i" in
        *.[Mm][Dd])
            o="${o%.??}.html"
            if [ "$i" -nt "$o" ]; then
                rawk_page "$i" > "$o"
            fi
            ;;
        *)
            if [ -d "$i" ]; then
                mkdir -p "$o"
            else
                cp -u "$i" "$o"
            fi
            ;;
        esac
    done
}

# main()
# Defaults
mdparser=smu
hdr_tpl=templates/hdr.tpl
ftr_tpl=templates/ftr.tpl

# source config file and check valid targets and source dirs
. "./$conf_file"
hdr_tpl="$(pwd)/$hdr_tpl"
ftr_tpl="$(pwd)/$ftr_tpl"

rawk_main "$@"

# fin
